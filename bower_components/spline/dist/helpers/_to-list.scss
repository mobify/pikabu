// To List
// =======
//
// Convert a string containing a set of delimited values into a
// space-separated list.
//
// @param $string [String] : Delimited string
// @param $separator [String] : String delimiter
// @return [List]

@function to-list($string, $separator: ', ') {
    @if type-of($string) != "string" {
        @warn "`to-list` function expecting a string for $string; #{type-of($string)} given.";
        @return false;
    }

    @if type-of($separator) != "string" {
        @warn "`to-list` function expecting a string for $separator; #{type-of($separator)} given.";
        @return false;
    }

    // Empty list to be built up.
    $list: ();

    // Until no more seprators are found…
    @while str-index($string, $separator) != null {

        // …get the position of the next separator.
        $sep-index: str-index($string, $separator);

        // Slice off a new string up to (but not including) the separator.
        $slice: str-slice($string, 1, $sep-index - 1);

        // Add the slice to the end of the growing list.
        $list: append($list, $slice);

        // Remove the sliced portion and separator from the front of the
        // original string so it’s ready to be processed again.
        $string: str-slice($string, $sep-index + str-length($separator));
    }

    // Append the last piece of the original string to the list and return.
    @return append($list, $string);
}
